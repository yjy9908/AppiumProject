{"name": "testlogin[1234567807-123456]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\Administrator\\AppData\\Local\\Programs\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)", "trace": "self = <MainProject.testcases.TestLogin.TestLogin object at 0x0000021975807C40>\nphone = 1234567807, pswd = 123456\n\n    @allure.story(\"用户登录\")\n    @pytest.mark.parametrize('phone,pswd', DataTurn_excel.read_data_from_excel(\"../data/account.xlsx\", 'account'))\n    def testlogin(self, phone, pswd):\n        logging.info(\"用户登录用例执行\")\n        login_page = LoginPage(driver=self.driver)\n        self.driver.implicitly_wait(20)\n>       login_page.login(phone, pswd)\n\nTestLogin.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pageobject\\LoginPage.py:26: in login\n    self.click(self.el_checkphonebtn)\n..\\base\\BasePage.py:21: in click\n    self.locator(loc).click()\n..\\base\\BasePage.py:12: in locator\n    return self.driver.find_element(*loc)\n..\\..\\venv\\lib\\site-packages\\appium\\webdriver\\webdriver.py:409: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n..\\..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000219758068C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...11)\\\\n    at runMicrotasks (<anonymous>)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:85:5)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        https://www.w3.org/TR/webdriver/#errors\n        \"\"\"\n        payload = response.get('value', '')\n        try:\n            payload_dict = json.loads(payload)\n        except (json.JSONDecodeError, TypeError):\n            return\n        if not isinstance(payload_dict, dict):\n            return\n        value = payload_dict.get('value')\n        if not isinstance(value, dict):\n            return\n        error = value.get('error')\n        if not error:\n            return\n    \n        message = value.get('message', error)\n        stacktrace = value.get('stacktrace', '')\n        # In theory, we should also be checking HTTP status codes.\n        # Java client, for example, prints a warning if the actual `error`\n        # value does not match to the response's HTTP status code.\n        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(\n            error, sel_exceptions.WebDriverException\n        )\n        if exception_class is sel_exceptions.WebDriverException and message:\n            if message == 'No such context found.':\n                exception_class = appium_exceptions.NoSuchContextException\n            elif message == 'That command could not be executed in the current context.':\n                exception_class = appium_exceptions.InvalidSwitchToTargetException\n    \n        if exception_class is sel_exceptions.UnexpectedAlertPresentException:\n            raise sel_exceptions.UnexpectedAlertPresentException(\n                msg=message,\n                stacktrace=format_stacktrace(stacktrace),\n                alert_text=value.get('data'),\n            )\n>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\Administrator\\AppData\\Local\\Programs\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:85:5)\n\n..\\..\\venv\\lib\\site-packages\\appium\\webdriver\\errorhandler.py:122: NoSuchElementException"}, "attachments": [{"name": "log", "source": "f382c177-d55a-4571-aec2-52ce6150320a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "phone", "value": "1234567807"}, {"name": "pswd", "value": "123456"}], "start": 1687854263362, "stop": 1687854290807, "uuid": "70ddd781-258c-4eac-a183-4b850d686826", "historyId": "631a9d7c489a6d1a0cfd3838672e5baf", "testCaseId": "824b9bcab66f6f6eb6d602986bde9331", "fullName": "testcases.TestLogin.TestLogin#testlogin", "labels": [{"name": "story", "value": "用户登录"}, {"name": "feature", "value": "登录"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "TestLogin"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-6GEC1L5"}, {"name": "thread", "value": "7464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.TestLogin"}]}